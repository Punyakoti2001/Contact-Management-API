package com.buildbot.contactsmanagement.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.buildbot.contactsmanagement.helper.ResponseConstants;
import com.buildbot.contactsmanagement.requestDto.LoginDto;
import com.buildbot.contactsmanagement.requestDto.UserDto;
import com.buildbot.contactsmanagement.responseDto.ResponseDto;
import com.buildbot.contactsmanagement.security.JwtService;
import com.buildbot.contactsmanagement.service.UserService;


@RestController
@RequestMapping("/build-bot/v1/contact-user")
public class UserController 
{
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private JwtService jwtService;
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private UserDetailsService detailesService;
	
	@PostMapping("/auth")
	public ResponseEntity<?> saveNewUser(@RequestBody UserDto userDto)
	{
		userService.saveUser(userDto);
		return ResponseEntity.status(HttpStatus.OK).body(new ResponseDto(HttpStatus.CREATED,ResponseConstants.CREATED_SUCCESS));
	}
	
	@PostMapping("/new-user")
	public String authenticateAndGetToken(@RequestBody LoginDto login)
	{
		 Authentication authenticate = authenticationManager.authenticate(
			                            new UsernamePasswordAuthenticationToken(
			                            		login.getUserName(), login.getPassword()));
		
		
		UserDetails userDetails = detailesService.loadUserByUsername(login.getUserName());
		
		System.err.println(userDetails.getAuthorities());
		 if(authenticate.isAuthenticated())
			 return jwtService.getToken(userDetails); 
		 return "wrong userName and Password";
	}

}

